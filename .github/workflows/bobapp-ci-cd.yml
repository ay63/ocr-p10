name: Bobapp workflow

on:
  push:
    branches:
      - main
      - features
  pull_request:
    branches:
      - main

jobs:
  test-build:
    name: Backend and Frontend build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run backend tests and Build backend
        run: |
          cd back
          mvn clean package

      - name: Upload backend coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/
          retention-days: 1

      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: back/target/
          retention-days: 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: "front/package-lock.json"

      - name: Install dependencies
        run: |
          cd front
          npm ci

      - name: Run frontend tests
        run: |
          cd front 
          npm run test -- --no-watch --browsers=ChromeHeadless --code-coverage

      - name: Build frontend
        run: |
          cd front 
          npm run build

      - name: Upload frontend coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/bobapp
          retention-days: 1

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: front/dist
          retention-days: 1

  sonarcloud:
    name: SonarCloud Analysis
    needs: [test-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/bobapp

      - name: Download backend artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: back/target

      - name: Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: front/dist

      # SonarCloud requires Java 17 or higher
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run SonarQube Scanner back
        run: |
          cd back
          mvn sonar:sonar \
          -Dsonar.projectKey=ay63_ocr-p10-back \
          -Dsonar.organization=ay63 \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.sources=src/main \
          -Dsonar.sourceEncoding=UTF-8
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL_CLOUD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run SonarQube Scanner front
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL_CLOUD }}
        with:
          projectBaseDir: front

  docker:
    name: Build and push Docker images
    needs: [sonarcloud]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download backend artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: back/target

      - name: Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: front/dist

      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./back
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/backend:buildcache,mode=max

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./front
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/frontend:buildcache,mode=max
